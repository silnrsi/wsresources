; Extended Urdu as implemented in EEGEncodingName		"X-SIL-EEG-URDU"DescriptiveName		"SIL EEG Extended Urdu"MacEncoding	27,0,0ByteDefault	191UniDefault	replacement_character128	<>	0x00a0	; char_nbspace129	<>	0x20dd	; char_circle130	<>	0x002b	; char_plus131	<>	0x00d7	; char_times132	<>	0x00f7	; char_divide133	<>	0x003d	; char_equals134	<>	0x2026	; char_ellipsis135	<>	0x2022	; char_bullet136	<>	0x2025	; char_percent144	<>	0x0028	; char_oparen145	<>	0x0029	; char_cparen146	<>	0x005b	; char_obracket147	<>	0x005d	; char_cbracket148	<>	0x007b	; char_obrace149	<>	0x007d	; char_cbrace150	<>	0x2039	; char_owedge151	<>	0x203a	; char_cwedge154	<>	0x06b5	; char_lbar_mrw (¥¥¥Unicode: lam with wedge above)155	<>	0x0654	; char_hamza_dia156	<>	0x0652	; char_skn_dia;157		0x06	; char_rX_dia;158		0x06	; char_rz_dia;159		0x06	; char_iv_dia160	<>	0x0020	; char_space_rl161	<>	0x067b	; char_bb_srk162	<>	0x0684	; char_jj_srk163	<>	0x0685	; char_j3_psh164	<>	0x0681	; char_jH_psh165	<>	0x068b	; char_dd_srk166	<>	0x0696	; char_r2_psh167	<>	0x069a	; char_s2_psh168	<>	0x06a4	; char_v_arb169	<>	0x06b3	; char_gg_srk170	<>	0x06bc	; char_N_srk	¥¥¥ this Unicode is really pashto n.171	<>	0x064a	; char_i_arb172	<>	0x06d0	; char_iv_psh;173		0x06	; char_ur_dia;174		0x06	; char_uu_dia175	<>	0x064c	; char_uur_dia176	<>	0x06f0	; char_zero177	<>	0x06f1	; char_one178	<>	0x06f2	; char_two179	<>	0x06f3	; char_three180	<>	0x06f4	; char_four181	<>	0x06f5	; char_five182	<>	0x06f6	; char_six183	<>	0x06f7	; char_seven184	<>	0x06f8	; char_eight185	<>	0x06f9	; char_nine186	<>	0x003a	; char_colon187	<>	0x061b	; char_semicolon188	<>	0x060c	; char_comma189	<>	0x002e	; char_period190	<>	0x0021	; char_exclam191	<>	0x061f	; char_question192	<>	0x0622	; char_A193	<>	0x0627	; char_a194	<>	0x0628	; char_b195	<>	0x067e	; char_p196	<>	0x062a	; char_t197	<>	0x0679	; char_T198	<>	0x062b	; char_s199	<>	0x062c	; char_j200	<>	0x0686	; char_c201	<>	0x062f	; char_d202	<>	0x0688	; char_D203	<>	0x062d	; char_X204	<>	0x062e	; char_x205	<>	0x0630	; char_zal206	<>	0x0631	; char_r207	<>	0x0691	; char_R208	<>	0x2013	; char_endash209	<>	0x2014	; char_emdash210	<>	0x201c	; char_odquote211	<>	0x201d	; char_cdquote212	<>	0x2018	; char_oquote213	<>	0x2019	; char_cquote214	<>	0x0632	; char_z215	<>	0x0698	; char_zh216	<>	0x0633	; char_sin217	<>	0x0634	; char_shin218	<>	0x0635	; char_swad219	<>	0x0636	; char_zwad220	<>	0x0637	; char_toe221	<>	0x0638	; char_zoe222	<>	0x0639	; char_ain223	<>	0x063a	; char_ghain224	<>	0x200b	; char_thinspace225	<>	0x0641	; char_f226	<>	0x0642	; char_q227	<>	0x06a9	; char_k228	<>	0x06af	; char_g229	<>	0x0644	; char_l230	<>	0x06b7	; char_L_brh231	<>	0x0645	; char_m232	<>	0x0646	; char_n233	<>	0x06ba	; char_n_gun234	<>	0x0648	; char_u235	<>	0x06be	; char_h_asp236	<>	0x06c1	; char_h237	<>	0x0629	; char_ht238	<>	0x06cc	; char_i239	<>	0x06d2	; char_e240	<>	0x0621	; char_hamza238 155	<>	0x0626	; hamza diacritic on yeByteClass [DIA] = (			\		155 156 157 158 159	\		173 174 175			\		242 243 244 245 246 247 248 249 250 251 )ByteClass [LTR] = (	\		154			\		161 162 163 164 165 166 167 168 169 170 171 172						\		192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207		\		214 215 216 217 218 219 220 221 222 223								\		225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241	\		254 255		)UniClass [DIA] = (0x0654 0x0652 0x064c 0x064e 0x0650 0x064f 0x0651 0x0652 0x064b 0x0670)UniClass [LTR] = (	\		0x06b5 0x067b 0x0684 0x0685 0x0681 0x068b 0x0696 0x069a 0x06a4 0x06b3 0x06bc	\		0x064a 0x06d0 0x0622 0x0627 0x0628 0x067e 0x062a 0x0679 0x062b 0x062c 0x0686	\		0x062f 0x0688 0x062d 0x062e 0x0630 0x0631 0x0691 0x0632 0x0698 0x0633 0x0634	\		0x0635 0x0636 0x0637 0x0638 0x0639 0x063a 0x0641 0x0642 0x06a9 0x06af 0x0644	\		0x06b7 0x0645 0x0646 0x06ba 0x0648 0x06be 0x06c1 0x0629 0x06cc 0x06d2 0x0621	\		0x0626 0x0640 0x0623 0x0625	); special handling for chota-ye: introduce zer if non-final238 / _             [LTR]	<>	0x0650 0x06cc / _             [LTR]238 / _       [DIA] [LTR]	<>	0x0650 0x06cc / _       [DIA] [LTR]238 / _ [DIA] [DIA] [LTR]	<>	0x0650 0x06cc / _ [DIA] [DIA] [LTR]; special handling for bara-ye: map to chota-ye if non-final239 / _             [LTR]	<>	0x06cc / _             [LTR]239 / _       [DIA] [LTR]	<>	0x06cc / _       [DIA] [LTR]239 / _ [DIA] [DIA] [LTR]	<>	0x06cc / _ [DIA] [DIA] [LTR]; special handling for hamza: map to hamza on ye if non-final240 / _             [LTR]	<>	0x0626 / _             [LTR]240 / _       [DIA] [LTR]	<>	0x0626 / _       [DIA] [LTR]240 / _ [DIA] [DIA] [LTR]	<>	0x0626 / _ [DIA] [DIA] [LTR]241	<>	0x0640	; char_kash242	<>	0x064e	; char_a_dia243	<>	0x0650	; char_i_dia244	<>	0x064f	; char_u_dia245	<>	0x0651	; char_tsh_dia246	<>	0x0652	; char_jzm_dia247	<>	0x064b	; char_aa_dia248	<>	0x0670	; char_dgr_dia;249		0x06	; char_nm_dia;250		0x06	; char_ain_dia;251		0x06	; char_swd_dia252	<>	0x2731	; char_star253	<>	0x002f	; char_slash254	<>	0x0623	; char_a_hmz_a255	<>	0x0625	; char_a_hmz_bByteClass [ascii] = ( 0..127 )UniClass [ascii] = ( 0..127 )[ascii] <> [ascii]	; deal with ASCII values not already mapped above